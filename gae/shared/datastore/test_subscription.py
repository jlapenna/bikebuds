# Copyright 2018 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import unittest

from shared import ds_util
from shared.datastore.subscription import SubscriptionEvent


class SubscriptionEventTest(unittest.TestCase):
    def test_hash_name(self):
        args = ['AAA', 'BBB', 'CCC']
        hash_name = SubscriptionEvent.hash_name(*args)
        # Hash guarenteed, generated by D6. :)
        self.assertEqual('2236edf1239b64ae48b309fb0bf15cdf6ddbf921', hash_name)

        reversed_hash_name = SubscriptionEvent.hash_name(*reversed(args))
        # Hash guarenteed, generated by D6. :)
        self.assertEqual('2ef291e5b3091198086ee74855e348436a6f4b36', reversed_hash_name)

    def test_hash_name_empty_args(self):
        args = []
        self.assertRaises(Exception, SubscriptionEvent.hash_name, *args)

    def test_uses_name(self):
        service_key = ds_util.client.key('Service', 'withings')
        event_data = {'key1': 'AAA', 'key2': 'BBB', 'key3': 'CCC'}
        event_entity = SubscriptionEvent.to_entity(
            event_data,
            name=SubscriptionEvent.hash_name(*sorted(event_data.values())),
            parent=service_key,
        )
        self.assertEqual(
            '2236edf1239b64ae48b309fb0bf15cdf6ddbf921', event_entity.key.name
        )
